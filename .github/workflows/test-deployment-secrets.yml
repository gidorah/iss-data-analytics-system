name: Test Deployment Secrets

on:
  workflow_dispatch:  # Manual trigger only

permissions:
  contents: read

jobs:
  test-secrets:
    runs-on: ubuntu-latest
    steps:
      - name: Test Coolify webhook accessibility
        run: |
          echo "üîç Testing Coolify webhook configuration..."
          
          # Test if webhook URL is accessible (without sending actual request)
          if curl -I "$COOLIFY_WEBHOOK" --connect-timeout 10 --max-time 30; then
            echo "‚úÖ Webhook URL is reachable"
          else
            echo "‚ùå Webhook URL is not reachable or returned error"
            exit 1
          fi
          
          # Validate URL format - check for Coolify deployment or webhook URLs
          if [[ "$COOLIFY_WEBHOOK" =~ ^https:// ]] && [[ "$COOLIFY_WEBHOOK" == *"coolify"* ]] && ([[ "$COOLIFY_WEBHOOK" == *"/api/v1/deploy"* ]] || [[ "$COOLIFY_WEBHOOK" == *"/webhooks/"* ]]); then
            echo "‚úÖ Webhook URL format is valid"
          else
            echo "‚ùå Webhook URL format is invalid - should be HTTPS Coolify URL with '/api/v1/deploy' or '/webhooks/'"
            exit 1
          fi
          
          # Test token format and presence (without exposing sensitive info)
          if [ -n "$COOLIFY_TOKEN" ]; then
            # Check minimum length without revealing actual length
            if [ ${#COOLIFY_TOKEN} -ge 10 ]; then
              # Check it contains only alphanumeric characters and safe symbols
              if [[ "$COOLIFY_TOKEN" =~ ^[a-zA-Z0-9_-]+$ ]]; then
                echo "‚úÖ Coolify token format is valid"
              else
                echo "‚ùå Coolify token contains invalid characters"
                exit 1
              fi
            else
              echo "‚ùå Coolify token is too short"
              exit 1
            fi
          else
            echo "‚ùå Coolify token is empty"
            exit 1
          fi
          
          echo "üéâ Secret validation completed successfully!"
        env:
          COOLIFY_WEBHOOK: ${{ secrets.COOLIFY_WEBHOOK }}
          COOLIFY_TOKEN: ${{ secrets.COOLIFY_TOKEN }}