name: Deploy to Staging

on:
  push:
    branches: [staging]

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  deployment-readiness:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Validate Docker build configuration
        run: |
          echo "🔍 Validating Dockerfile and build context..."
          if [ ! -f "services/ingestion/Dockerfile" ]; then
            echo "::error::Dockerfile not found at services/ingestion/Dockerfile"
            exit 1
          fi
          if [ ! -f "pyproject.toml" ]; then
            echo "::error::Workspace configuration not found"
            exit 1
          fi
          echo "✅ Build configuration validated"

      - name: Validate environment connectivity
        run: |
          echo "🌐 Testing external connectivity for deployment..."
          # Test essential external services connectivity
          curl -s --max-time 10 https://api.github.com/zen || echo "⚠️  GitHub API connectivity issue"
          curl -s --max-time 10 https://pypi.org/simple/ || echo "⚠️  PyPI connectivity issue"
          echo "✅ External connectivity validated"

  deploy:
    if: github.ref == 'refs/heads/staging' && github.event_name == 'push'
    needs: deployment-readiness
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Notify deployment readiness
        run: |
          echo "✅ All deployment checks passed!"
          echo "🔄 Coolify GitHub App will automatically deploy this commit"
          echo "📍 Staging URL: http://yoows40k844kc8w880ks48o0.157.90.158.16.sslip.io"
          echo "🕒 Commit: ${{ github.sha }}"
          echo "👤 Author: ${{ github.actor }}"

      - name: Wait for GitHub App deployment
        run: |
          echo "⏳ Waiting for Coolify GitHub App to process deployment..."
          echo "ℹ️  GitHub App integration will automatically deploy after this CI/CD completes"
          sleep 45
          echo "✅ Deployment initiation period completed"

      - name: Validate post-deployment health
        run: |
          echo "🏥 Validating service health after GitHub App deployment..."
          SERVICE_URL="http://yoows40k844kc8w880ks48o0.157.90.158.16.sslip.io"

          # Extended retry for GitHub App deployment
          for i in {1..5}; do
            echo "🔍 Health check attempt $i/5..."
            if curl -f --max-time 10 "$SERVICE_URL/healthz"; then
              echo "✅ Service is healthy and responding"
              echo "🚀 GitHub App deployment successful!"
              break
            else
              echo "⚠️  Service not ready yet, retrying in 15s..."
              sleep 15
              if [ "$i" -eq 5 ]; then
                echo "::warning::Service health check failed - GitHub App may still be deploying"
                echo "🔍 Check Coolify dashboard for deployment status"
                exit 0  # Don't fail CI/CD, just warn
              fi
            fi
          done
          echo "✅ Post-deployment validation completed"
