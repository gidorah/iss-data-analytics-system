name: CI/CD Pipeline

on:
  push:
    branches: [main]

permissions:
  contents: read
  actions: read
  checks: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install uv
        uses: astral-sh/setup-uv@v4
        with:
          version: "latest"

      - name: Set up Python
        run: uv python install 3.11

      - name: Install dependencies
        run: uv sync

      - name: Run linting
        run: |
          uv run ruff check .
          uv run ruff format --check .

      - name: Run tests
        run: uv run pytest tests/ -v

      - name: Install actionlint
        run: |
          bash <(curl https://raw.githubusercontent.com/rhysd/actionlint/main/scripts/download-actionlint.bash)
          ./actionlint -version
        
      - name: Lint workflow files
        run: ./actionlint -color

  deploy:
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    needs: test
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - name: Validate deployment secrets
        run: |
          # Validate that secrets are available (but don't expose values)
          if [ -z "$COOLIFY_WEBHOOK" ]; then
            echo "::error::COOLIFY_WEBHOOK secret is not configured"
            exit 1
          fi
          if [ -z "$COOLIFY_TOKEN" ]; then
            echo "::error::COOLIFY_TOKEN secret is not configured"
            exit 1
          fi
          echo "âœ“ Deployment secrets are properly configured"
        env:
          COOLIFY_WEBHOOK: ${{ secrets.COOLIFY_WEBHOOK }}
          COOLIFY_TOKEN: ${{ secrets.COOLIFY_TOKEN }}

      - name: Trigger Coolify Deployment
        run: |
          echo "ðŸš€ Triggering deployment to Coolify..."
          curl -X POST "$COOLIFY_WEBHOOK" \
            -H "Authorization: Bearer $COOLIFY_TOKEN" \
            -H "Content-Type: application/json" \
            --fail --show-error --silent
          echo "âœ… Deployment webhook triggered successfully"
        env:
          COOLIFY_WEBHOOK: ${{ secrets.COOLIFY_WEBHOOK }}
          COOLIFY_TOKEN: ${{ secrets.COOLIFY_TOKEN }}
